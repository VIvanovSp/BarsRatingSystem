@model BarRatingSystem.Models.Bar

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Bar</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UploadedImage" class="control-label">Upload Image</label>
                <!-- Change type to 'file' for the image upload -->
                <input id="UploadedImage" asp-for="UploadedImage" type="file" class="form-control" onchange="setUploadedFile()" />
                <span id="UploadedImageError" asp-validation-for="UploadedImage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input id="Image" asp-for="Image" class="form-control" />
        
    @* @Html.HiddenFor(a => Model.Image) *@
 <span asp-validation-for="Image" class="text-danger"></span>
            </div>

            <!-- Image preview container -->
            <div class="form-group">
                <img id="imagePreview" src="#" alt="Image preview..." style="width: 100%; display: none;" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function setUploadedFile() {
            var file = document.querySelector('input[type=file]').files[0];
            var reader = new FileReader();

            var maxSize = 2 * 1024 * 1024; // 2MB in bytes

            // Clear any previous error messages and preview
            document.getElementById('UploadedImageError').style.display = 'none';

            // Check the file size before reading the file
            if (file && file.size > maxSize) {
                displayError('File size must not exceed 2 MB.');
                return; // Exit the function early
            }

            console.log(file);

            if (file) {
                reader.addEventListener(
                    "load",
                    () => {

                        var preview = document.getElementById('imagePreview');
                        preview.src = reader.result;
                        preview.style.display = 'block'; // Show the image preview

                        document.getElementById('Image').value = reader.result;

                        preview.src = reader.result;
                        preview.style.display = 'block'; // Show the image preview
                    },
                    false,
                );

                reader.readAsDataURL(file);

            }



            // Only set up the file reading and handle the result if the file is valid
            // if (file) {
            //     reader.onloadend = function () {
            //         // Ensure file is still valid when the read completes
            //         if (file.size <= maxSize) {
            //             document.getElementById('Image').value = reader.result;
            //             previewFile(reader.result); // Pass the result directly to the preview function
            //         }
            //     };

            //     reader.readAsDataURL(file); // Proceed to read the file
            // }
        }

        function previewFile(dataURL) {
            var preview = document.getElementById('imagePreview');
            if (dataURL) {
                preview.src = dataURL;
                preview.style.display = 'block'; // Show the image preview
            }
        }

        function displayError(message) {
            var errorElement = document.getElementById('UploadedImageError');
            errorElement.innerText = message;
            errorElement.style.display = 'block';
            clearPreview(); // Clear preview if there's an error
        }

        function clearPreview() {
            var preview = document.getElementById('imagePreview');
            preview.src = "";
            preview.style.display = 'none'; // Hide the preview
        }
    </script>
}
